import telebot
from telebot.types import ChatPermissions
import requests
import random
import os
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup
from datetime import datetime, timedelta, date
import time
import atexit
from telebot import TeleBot, types
import pytz
import threading
from threading import Timer
import json
import re
import traceback
import schedule
from telebot.apihelper import ApiException
from collections import defaultdict
from apscheduler.schedulers.background import BackgroundScheduler
from apscheduler.triggers.cron import CronTrigger

# =====================--------------(TOKEN BOT)--------------=====================
# THAY TH·∫æ C√ÅC TOKEN N√ÄY B·∫∞NG TOKEN TH·ª∞C T·∫æ C·ª¶A B·∫†N
API_BOT = '7324552224:AAGcEd3dg5OZuIs0bJF6QFfa4B3lgNq2rh8' # Bot ch√≠nh (d√πng cho l·ªánh /congtien v√† th√¥ng b√°o ri√™ng cho admin)
API_BOT2 = '7975395053:AAE6xhLQ-y6BJTlvrNgWjOOWSnZMZ40AxTw' # Bot ph√≤ng game T√†i X·ªâu
API_BOT3 = '8027877843:AAG1z9OcCkdz8jcT3KnWuKi6BCzvlJhxu2s'

Use this token to access the HTTP API:
8027877843:AAG1z9OcCkdz8jcT3KnWuKi6BCzvlJhxu2s
Keep your token secure and store it safely, it can be used by anyone to control your bot.

For a description of the Bot API, see this page: https://core.telegram.org/bots/api' # Bot th√¥ng b√°o (c√≥ th·ªÉ kh√¥ng c·∫ßn n·∫øu ch·ªâ g·ª≠i ri√™ng admin)

bot = telebot.TeleBot(API_BOT, parse_mode=None)
bot2 = telebot.TeleBot(API_BOT2)
bot3 = telebot.TeleBot(API_BOT3) # Gi·ªØ l·∫°i n·∫øu b·∫°n mu·ªën bot3 v·∫´n g·ª≠i th√¥ng b√°o c√¥ng khai

# =====================--------------(C·∫•u h√¨nh Admin v√† Nh√≥m)--------------=====================
ADMIN_ID = 6915752059 # THAY TH·∫æ B·∫∞NG ID TELEGRAM C·ª¶A ADMIN
group_chat_id = -1002781947864 # ID nh√≥m th√¥ng b√°o chung (n·∫øu c√≥)
group_chat_id2 = -1002781947864 # ID nh√≥m ph√≤ng game T√†i X·ªâu
group_chat_id4 = -1002781947864 # ID nh√≥m th√¥ng b√°o k·∫øt qu·∫£ ph√≤ng game (n·∫øu c√≥)

# =====================--------------(Bi·∫øn to√†n c·ª•c)--------------=====================
user_balance = {}
user_bets = {} # L∆∞u tr·ªØ c∆∞·ª£c c·ªßa ng∆∞·ªùi ch∆°i trong phi√™n hi·ªán t·∫°i
current_session = 1
session_results = [] # L·ªãch s·ª≠ k·∫øt qu·∫£ c√°c phi√™n
processed_users = set() # Theo d√µi ng∆∞·ªùi ch∆°i ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω th·∫Øng/thua trong phi√™n
accepting_bets = False # Tr·∫°ng th√°i cho ph√©p ƒë·∫∑t c∆∞·ª£c

# =====================--------------(Kho L∆∞u S·ªë D∆∞)--------------=====================

def save_balance_to_file():
    """L∆∞u s·ªë d∆∞ c·ªßa ng∆∞·ªùi d√πng v√†o file sodu.txt"""
    with open("sodu.txt", "w") as f:
        for user_id, balance in user_balance.items():
            balance_int = int(balance)
            f.write(f"{user_id} {balance_int}\n")

def load_balance_from_file():
    """T·∫£i s·ªë d∆∞ c·ªßa ng∆∞·ªùi d√πng t·ª´ file sodu.txt"""
    if os.path.exists("sodu.txt"):
        with open("sodu.txt", "r") as f:
            for line in f:
                if line.strip():
                    try:
                        user_id, balance_str = line.strip().split()
                        balance = float(balance_str)
                        if balance.is_integer():
                            balance = int(balance)
                        user_balance[int(user_id)] = balance
                    except ValueError:
                        print(f"L·ªói ƒë·ªçc d√≤ng trong sodu.txt: {line.strip()}")
    else:
        # T·∫°o file n·∫øu ch∆∞a t·ªìn t·∫°i
        open("sodu.txt", "a").close()

# T·∫£i s·ªë d∆∞ khi bot kh·ªüi ƒë·ªông
load_balance_from_file()

# ƒêƒÉng k√Ω h√†m save_balance_to_file ƒë·ªÉ ch·∫°y khi script k·∫øt th√∫c
atexit.register(save_balance_to_file)

# =====================--------------(Qu·∫£n l√Ω Phi√™n Game)--------------=====================

def save_session_to_file():
    """L∆∞u s·ªë phi√™n hi·ªán t·∫°i v√†o file phien.txt"""
    with open("phien.txt", "w") as file:
        file.write(str(current_session))

def load_session_from_file():
    """T·∫£i s·ªë phi√™n hi·ªán t·∫°i t·ª´ file phien.txt"""
    global current_session
    try:
        with open("phien.txt", "r") as file:
            current_session = int(file.read())
    except FileNotFoundError:
        current_session = 1
        save_session_to_file() # T·∫°o file n·∫øu ch∆∞a c√≥
    except ValueError:
        current_session = 1 # Reset n·∫øu n·ªôi dung file kh√¥ng h·ª£p l·ªá
        save_session_to_file()

def save_session_history_to_file():
    """L∆∞u l·ªãch s·ª≠ 10 phi√™n g·∫ßn nh·∫•t v√†o file matphien.txt"""
    last_10_sessions = session_results[-10:]
    display_last_10 = " ".join(
        ["üîµ" if session == 'T' else "üî¥" for session in last_10_sessions])
    with open("matphien.txt", "w", encoding='utf-8') as file:
        file.write(display_last_10)

def load_session_history_from_file():
    """T·∫£i l·ªãch s·ª≠ phi√™n t·ª´ file matphien.txt"""
    global session_results
    try:
        with open("matphien.txt", "r", encoding='utf-8') as file:
            session_history = file.read().split()
            session_results = [
                'T' if session == 'üîµ' else 'X'
                for session in session_history
            ]
    except FileNotFoundError:
        session_results = []
        save_session_history_to_file() # T·∫°o file n·∫øu ch∆∞a c√≥

# T·∫£i d·ªØ li·ªáu phi√™n khi bot kh·ªüi ƒë·ªông
load_session_from_file()
load_session_history_from_file()

# =====================--------------(H√†m h·ªó tr·ª£ Game)--------------=====================

def send_dice_room_reply(chat_id):
    """G·ª≠i x√∫c x·∫Øc v√† tr·∫£ v·ªÅ gi√° tr·ªã"""
    response = requests.get(
        f'https://api.telegram.org/bot{API_BOT2}/sendDice?chat_id={chat_id}'
    )
    if response.status_code == 200:
        data = response.json()
        if 'result' in data and 'dice' in data['result']:
            return data['result']['dice']['value']
    return None

def check_result(dice_sum):
    """Ki·ªÉm tra k·∫øt qu·∫£ T√†i/X·ªâu t·ª´ t·ªïng ƒëi·ªÉm x√∫c x·∫Øc"""
    if 11 <= dice_sum <= 18:
        return 'T' # T√†i
    elif 3 <= dice_sum <= 10:
        return 'X' # X·ªâu
    return 'None'

def check_result1(dice_sum):
    """Tr·∫£ v·ªÅ chu·ªói 'T√ÄI' ho·∫∑c 'X·ªàU'"""
    if 11 <= dice_sum <= 18:
        return 'T√ÄI'
    elif 3 <= dice_sum <= 10:
        return 'X·ªàU'
    return 'None'

def confirm_bet(user_id, bet_type, bet_amount, original_message_id, is_anonymous=False):
    """X√°c nh·∫≠n v√† x·ª≠ l√Ω ƒë·∫∑t c∆∞·ª£c c·ªßa ng∆∞·ªùi ch∆°i"""
    global current_session
    global user_balance

    if user_balance.get(user_id, 0) >= bet_amount:
        if user_id not in user_bets:
            user_bets[user_id] = {'T': 0, 'X': 0}

        user_bets[user_id][bet_type.upper()] += bet_amount
        user_balance[user_id] -= bet_amount
        save_balance_to_file()

        encoded_user_id = f"***{str(user_id)[-4:]}"
        remaining_balance = user_balance[user_id]

        if is_anonymous:
            confirmation_message = f"üèÆ **ƒê·∫∑t th√†nh c√¥ng k·ª≥ XX #`{current_session}`\nL·ªánh {bet_type}\nS·ªë ti·ªÅn c∆∞·ª£c: `{int(bet_amount):,}`\nNg∆∞·ªùi c∆∞·ª£c: `(·∫®n Danh)`**"
            bot2.send_message(group_chat_id2, confirmation_message, parse_mode='Markdown')
        else:
            confirmation_message = f"üèÆ **ƒê·∫∑t th√†nh c√¥ng k·ª≥ #`{current_session}`\nL·ªánh {bet_type}\nS·ªë ti·ªÅn c∆∞·ª£c: `{int(bet_amount):,}`\nNg∆∞·ªùi c∆∞·ª£c: `({encoded_user_id})`**"
            bot2.send_message(group_chat_id2, confirmation_message, reply_to_message_id=original_message_id, parse_mode='Markdown')

        confirmation_message1 = f"üèÆ **B·∫°n ƒë·∫∑t th√†nh c√¥ng k·ª≥ XX #`{current_session}`\nL·ªánh: {bet_type} - {int(bet_amount):,}\nS·ªë d∆∞ c√≤n l·∫°i: {int(remaining_balance):,}**"
        bot.send_message(chat_id=user_id, text=confirmation_message1, parse_mode='Markdown')

        # Th√¥ng b√°o cho admin v·ªÅ c∆∞·ª£c c·ªßa ng∆∞·ªùi ch∆°i (t√πy ch·ªçn, c√≥ th·ªÉ b·ªè n·∫øu admin kh√¥ng mu·ªën)
        # bot.send_message(ADMIN_ID, f"Ng∆∞·ªùi ch∆°i {user_id} ƒë√£ c∆∞·ª£c {bet_amount:,} {bet_type} trong phi√™n {current_session}.", parse_mode='Markdown')

        return True
    else:
        if is_anonymous:
            encoded_user_id = f"(·∫®n Danh)"
            bot2.send_message(group_chat_id2, f"‚ùå {encoded_user_id} Kh√¥ng ƒë·ªß s·ªë d∆∞ ƒë·ªÉ ƒë·∫∑t c∆∞·ª£c.")
        else:
            encoded_user_id = f"***{str(user_id)[-4:]}"
            bot2.send_message(group_chat_id2, f"‚ùå {encoded_user_id} Kh√¥ng ƒë·ªß s·ªë d∆∞ ƒë·ªÉ ƒë·∫∑t c∆∞·ª£c.", reply_to_message_id=original_message_id)
        return False

def calculate_user_winnings(user_id, game_result):
    """T√≠nh to√°n ti·ªÅn th·∫Øng cho ng∆∞·ªùi ch∆°i"""
    if (game_result == 'T' and user_bets[user_id]['T'] > 0) or \
       (game_result == 'X' and user_bets[user_id]['X'] > 0):
        winnings = 1.95 * (user_bets[user_id]['T'] + user_bets[user_id]['X'])
        user_balance[user_id] += winnings
        save_balance_to_file()
        return winnings
    return 0

def calculate_user_losses(user_id, game_result):
    """T√≠nh to√°n ti·ªÅn thua cho ng∆∞·ªùi ch∆°i"""
    # N·∫øu k·∫øt qu·∫£ kh√¥ng kh·ªõp v·ªõi c∆∞·ª£c c·ªßa ng∆∞·ªùi ch∆°i, h·ªç thua to√†n b·ªô s·ªë ti·ªÅn c∆∞·ª£c
    if (game_result != 'T' and user_bets[user_id]['T'] > 0) or \
       (game_result != 'X' and user_bets[user_id]['X'] > 0):
        return user_bets[user_id]['T'] + user_bets[user_id]['X']
    return 0

def turn_on_group_chat():
    """B·∫≠t quy·ªÅn g·ª≠i tin nh·∫Øn trong nh√≥m game"""
    permissions = ChatPermissions(can_send_messages=True)
    try:
        bot2.set_chat_permissions(group_chat_id2, permissions)
    except ApiException as e:
        print(f"L·ªói khi b·∫≠t quy·ªÅn nh·∫Øn tin: {e}")

def turn_off_group_chat():
    """T·∫Øt quy·ªÅn g·ª≠i tin nh·∫Øn trong nh√≥m game"""
    permissions = ChatPermissions(can_send_messages=False)
    try:
        bot2.set_chat_permissions(group_chat_id2, permissions)
    except ApiException as e:
        print(f"L·ªói khi t·∫Øt quy·ªÅn nh·∫Øn tin: {e}")

# =====================--------------(Lu·ªìng Game)--------------=====================

def start_game():
    """B·∫Øt ƒë·∫ßu m·ªôt phi√™n game m·ªõi"""
    global current_session, accepting_bets
    current_session += 1
    accepting_bets = True

    turn_on_group_chat()
    bot2.send_message(
        group_chat_id2,
        f"<blockquote> M·ªùi B·∫°n ƒê·∫∑t C∆∞·ª£c Phi√™n #`{current_session}`</blockquote>\n\n"
        f"‚óâ** C√°ch Ch∆°i**: `T` [ s·ªë ti·ªÅn ] `X` [ s·ªë ti·ªÅn ]\n"
        f"‚óâ** C√°ch Ch∆°i**: `T MAX` `X MAX`\n\n"
        f"‚óâ V√≠ D·ª•: **T** 10000 & **X** 10000\n\n"
        f"‚óâ** Tr·∫£ th∆∞·ªüng cho ng∆∞·ªùi th·∫Øng *1.95**\n"
        f"‚óâ** Ch·ªâ ƒë∆∞·ª£c c∆∞·ª£c 1 m·∫∑t trong phi√™n**\n"
        f"‚óâ** Min c∆∞·ª£c: 3.000 - Max c∆∞·ª£c: 300.000**\n\n"
        f"‚óâ** B·∫Øt ƒë·∫ßu c∆∞·ª£c th·ªùi gian [ 90s ]**\n"
        f"üòò **M·ªùi c√°c ƒë·∫°i gia ra tay c∆∞·ª£c m·∫°nh nh√© !**\n",
        parse_mode='Markdown'
    )

    time.sleep(30) # 60s c√≤n l·∫°i

    total_bet_T = sum([user_bets[user_id]['T'] for user_id in user_bets if 'T' in user_bets[user_id]])
    total_bet_X = sum([user_bets[user_id]['X'] for user_id in user_bets if 'X' in user_bets[user_id]])
    total_bet_TAI = sum([1 for user_id in user_bets if user_bets[user_id]['T'] > 0])
    total_bet_XIU = sum([1 for user_id in user_bets if user_bets[user_id]['X'] > 0])

    bot2.send_message(
        group_chat_id2,
        (
            f"**‚è∞ C√≤n 60s ƒë·ªÉ c∆∞·ª£c phi√™n #`{current_session}`**\n"
            f"<blockquote>T·ªïng C∆∞·ª£c üîµ | T·ªïng C∆∞·ª£c üî¥</blockquote>\n"
            f"**üîµ T√ÄI: `{int(total_bet_T):,}`**\n"
            f"\n"
            f"**üî¥ X·ªàU: `{int(total_bet_X):,}`**\n\n"
            f"<blockquote>S·ªë Ng∆∞·ªùi C∆∞·ª£c T√ÄI -- X·ªàU</blockquote>\n"
            f"**üëÅ‚Äçüó® T√ÄI: `{int(total_bet_TAI):,}` Ng∆∞·ªùi c∆∞·ª£c.**\n"
            f"\n"
            f"**üëÅ‚Äçüó® X·ªàU: `{int(total_bet_XIU):,}` Ng∆∞·ªùi c∆∞·ª£c.**\n\n"
        ),
        parse_mode='Markdown'
    )

    time.sleep(30) # 30s c√≤n l·∫°i

    total_bet_T = sum([user_bets[user_id]['T'] for user_id in user_bets if 'T' in user_bets[user_id]])
    total_bet_X = sum([user_bets[user_id]['X'] for user_id in user_bets if 'X' in user_bets[user_id]])
    total_bet_TAI = sum([1 for user_id in user_bets if user_bets[user_id]['T'] > 0])
    total_bet_XIU = sum([1 for user_id in user_bets if user_bets[user_id]['X'] > 0])

    bot2.send_message(
        group_chat_id2,
        (
            f"**‚è∞ C√≤n 30s ƒë·ªÉ c∆∞·ª£c phi√™n #[`{current_session}`]**\n"
            f"<blockquote>T·ªïng C∆∞·ª£c üîµ | T·ªïng C∆∞·ª£c üî¥</blockquote>\n"
            f"**üîµ T√ÄI: `{int(total_bet_T):,}`**\n"
            f"\n"
            f"**üî¥ X·ªàU: `{int(total_bet_X):,}`**\n\n"
            f"<blockquote>S·ªë Ng∆∞·ªùi C∆∞·ª£c T√ÄI -- X·ªàU</blockquote>\n"
            f"**üëÅ‚Äçüó® T√ÄI: `{int(total_bet_TAI):,}` Ng∆∞·ªùi c∆∞·ª£c.**\n"
            f"\n"
            f"**üëÅ‚Äçüó® X·ªàU: `{int(total_bet_XIU):,}` Ng∆∞·ªùi c∆∞·ª£c.**\n\n"
        ),
        parse_mode='Markdown'
    )

    time.sleep(20) # 10s c√≤n l·∫°i

    total_bet_T = sum([user_bets[user_id]['T'] for user_id in user_bets if 'T' in user_bets[user_id]])
    total_bet_X = sum([user_bets[user_id]['X'] for user_id in user_bets if 'X' in user_bets[user_id]])
    total_bet_TAI = sum([1 for user_id in user_bets if user_bets[user_id]['T'] > 0])
    total_bet_XIU = sum([1 for user_id in user_bets if user_bets[user_id]['X'] > 0])

    bot2.send_message(
        group_chat_id2,
        (
            f"**‚è∞ C√≤n 10s ƒë·ªÉ c∆∞·ª£c phi√™n #[`{current_session}`]**\n"
            f"<blockquote>T·ªïng C∆∞·ª£c üîµ | T·ªïng C∆∞·ª£c üî¥</blockquote>\n"
            f"**üîµ T√ÄI: `{int(total_bet_T):,}`**\n"
            f"\n"
            f"**üî¥ X·ªàU: `{int(total_bet_X):,}`**\n\n"
            f"<blockquote>S·ªë Ng∆∞·ªùi C∆∞·ª£c T√ÄI -- X·ªàU</blockquote>\n"
            f"**üëÅ‚Äçüó® T√ÄI: `{int(total_bet_TAI):,}` Ng∆∞·ªùi c∆∞·ª£c.**\n"
            f"\n"
            f"**üëÅ‚Äçüó® X·ªàU: `{int(total_bet_XIU):,}` Ng∆∞·ªùi c∆∞·ª£c.**\n\n"
        ),
        parse_mode='Markdown'
    )

    time.sleep(10) # H·∫øt th·ªùi gian c∆∞·ª£c

    total_bet_T = sum([user_bets[user_id]['T'] for user_id in user_bets if 'T' in user_bets[user_id]])
    total_bet_X = sum([user_bets[user_id]['X'] for user_id in user_bets if 'X' in user_bets[user_id]])
    total_bet_TAI = sum([1 for user_id in user_bets if user_bets[user_id]['T'] > 0])
    total_bet_XIU = sum([1 for user_id in user_bets if user_bets[user_id]['X'] > 0])

    bot2.send_message(
        group_chat_id2,
        (
            f"**‚è∞ H·∫øt th·ªùi gian phi√™n #[`{current_session}`]**\n"
            f"<blockquote>T·ªïng C∆∞·ª£c üîµ | T·ªïng C∆∞·ª£c üî¥</blockquote>\n"
            f"**üîµ T√ÄI: `{int(total_bet_T):,}`**\n"
            f"\n"
            f"**üî¥ X·ªàU: `{int(total_bet_X):,}`**\n\n"
            f"<blockquote>S·ªë Ng∆∞·ªùi C∆∞·ª£c T√ÄI -- X·ªàU</blockquote>\n"
            f"**üëÅ‚Äçüó® T√ÄI: `{int(total_bet_TAI):,}` Ng∆∞·ªùi c∆∞·ª£c.**\n"
            f"\n"
            f"**üëÅ‚Äçüó® X·ªàU: `{int(total_bet_XIU):,}` Ng∆∞·ªùi c∆∞·ª£c.**\n\n"
        ),
        parse_mode='Markdown'
    )

    turn_off_group_chat() # T·∫Øt nh·∫≠n c∆∞·ª£c
    accepting_bets = False
    time.sleep(6)

    bot2.send_message(
        group_chat_id2,
        f"**B·∫Øt ƒë·∫ßu tung x√∫c x·∫Øc phi√™n #`{current_session}`**", parse_mode='Markdown')
    time.sleep(3)

    result = [send_dice_room_reply(group_chat_id2) for _ in range(3)]
    dice_sum = sum(result)
    game_result = check_result(dice_sum)
    session_results.append(game_result)
    
    # G·ª¨I K·∫æT QU·∫¢ RI√äNG CHO ADMIN TR∆Ø·ªöC KHI C√îNG KHAI
    admin_private_message = (
        f"üé≤ **K·∫æT QU·∫¢ RI√äNG CHO ADMIN** üé≤\n"
        f"Phi√™n #`{current_session}`\n"
        f"X√∫c x·∫Øc: {result} (T·ªïng: {dice_sum})\n"
        f"K·∫øt qu·∫£: **{check_result1(dice_sum)}**\n"
        f"Lo·∫°i: {'üîµ T√†i' if game_result == 'T' else 'üî¥ X·ªâu'}\n"
        f"----------------------------------------\n"
        f"T·ªïng c∆∞·ª£c T√†i: {int(total_bet_T):,} VNƒê\n"
        f"T·ªïng c∆∞·ª£c X·ªâu: {int(total_bet_X):,} VNƒê\n"
    )
    bot.send_message(ADMIN_ID, admin_private_message, parse_mode='Markdown')
    time.sleep(2) # ƒê·ª£i m·ªôt ch√∫t tr∆∞·ªõc khi c√¥ng khai

    send_game_result_and_process_winnings(result, dice_sum, game_result, total_bet_T, total_bet_X)

    save_session_to_file()

def send_game_result_and_process_winnings(result, dice_sum, game_result, total_bet_T, total_bet_X):
    """G·ª≠i k·∫øt qu·∫£ game v√† x·ª≠ l√Ω ti·ªÅn th·∫Øng/thua"""
    global current_session
    last_10_sessions = session_results[-10:]
    display_last_10 = " ".join(
        ["üîµ" if session == 'T' else "üî¥" for session in last_10_sessions])
    last_1_sessions = session_results[-1:]
    display_last_1 = " ".join(
        ["üîµ" if session == 'T' else "üî¥" for session in last_1_sessions])

    total_winnings = 0
    total_losses = 0
    user_winnings_dict = {}

    for user_id in user_bets:
        if user_id not in processed_users:
            try:
                user_winnings = calculate_user_winnings(user_id, game_result)
                user_losses = calculate_user_losses(user_id, game_result)
                total_winnings += user_winnings
                total_losses += user_losses
                processed_users.add(user_id)
                user_winnings_dict[user_id] = user_winnings
            except Exception as e:
                print(f"L·ªói x·ª≠ l√Ω ti·ªÅn th·∫Øng/thua cho user {user_id}: {e}")

    sorted_user_winnings = sorted(user_winnings_dict.items(), key=lambda x: x[1], reverse=True)

    leaderboard_message = ""
    if sorted_user_winnings:
        leaderboard_message = "\n".join([
            f"‚îÉ{i+1} - `{str(uid)[-4:]}` - `{int(winnings):,}`"
            for i, (uid, winnings) in enumerate(sorted_user_winnings[:10])
        ])
    else:
        leaderboard_message = "‚îÉ Kh√¥ng c√≥ ng∆∞·ªùi th·∫Øng trong phi√™n n√†y."


    time.sleep(4)
    keyboard = types.InlineKeyboardMarkup()
    url_button = types.InlineKeyboardButton(text="K·∫øt Qu·∫£ TX [ Room ]",
                                            url="https://t.me/kqtxroomluxury") # Thay link n·∫øu c√≥
    keyboard.add(url_button)
    bot2.send_message(
        group_chat_id2,
        (
            f"**üå∏ K·∫øt Qu·∫£ X√∫c X·∫Øc Phi√™n #`{current_session}`\n"
            f"‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì\n"
            f"‚îÉ  {' '.join(map(str, result))}  ({dice_sum})  {check_result1(dice_sum)} {display_last_1}\n"
            f"‚îÉ\n"
            f"‚îÉ üîé T·ªïng Th·∫Øng: `{int(total_winnings):,}`\n"
            f"‚îÉ\n"
            f"‚îÉ üîé T·ªïng Thua: `{int(total_losses):,}`\n"
            f"‚îÉ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            f"‚îÉ üèÜ Top B·∫£ng X·∫øp H·∫°ng #[`{current_session}`]\n"
            f"‚îÉ TOP - ID - T·ªïng th·∫Øng\n"
            f"{leaderboard_message}\n"
            f"‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ\n"
            f"L·ªãch S·ª≠ Phi√™n G·∫ßn Nh·∫•t\n\n"
            f"{display_last_10}\n\n"
            f"      üîµ  T√†i       |      üî¥   X·ªàU\n**"
        ),
        parse_mode='Markdown',
        reply_markup=keyboard
    )
    
    # G·ª≠i k·∫øt qu·∫£ c√¥ng khai ra nh√≥m k·∫øt qu·∫£ n·∫øu c√≥
    # bot3.send_message(group_chat_id4, result_message, parse_mode='HTML') # B·ªè comment n·∫øu mu·ªën d√πng bot3

    # G·ª≠i th√¥ng b√°o ri√™ng cho t·ª´ng ng∆∞·ªùi ch∆°i
    for user_id, user_winnings in user_winnings_dict.items():
        user_losses = calculate_user_losses(user_id, game_result) # C·∫ßn t√≠nh l·∫°i losses n·∫øu user_winnings_dict ch·ªâ ch·ª©a ng∆∞·ªùi th·∫Øng
        balance = user_balance.get(user_id, 0)
        rounded_balance = round(balance)

        if user_winnings > 0:
            message_text = (
                f"üîπÔ∏è Phi√™n XX#`{current_session}` B·∫°n ƒê√£ Th·∫Øng\n"
                f"S·ªë ti·ªÅn th·∫Øng: **{int(user_winnings):,}**\n"
                f"S·ªë d∆∞ m·ªõi: **{int(rounded_balance):,}**"
            )
        elif user_losses > 0: # Ch·ªâ g·ª≠i tin thua n·∫øu th·ª±c s·ª± c√≥ thua
            message_text = (
                f"üîπÔ∏è Phi√™n XX#`{current_session}` B·∫°n ƒê√£ Thua\n"
                f"S·ªë ti·ªÅn thua: **{int(user_losses):,}**\n"
                f"S·ªë d∆∞ m·ªõi: **{int(rounded_balance):,}**"
            )
        else: # Tr∆∞·ªùng h·ª£p kh√¥ng th·∫Øng kh√¥ng thua (v√≠ d·ª• kh√¥ng c∆∞·ª£c)
            continue # B·ªè qua kh√¥ng g·ª≠i tin nh·∫Øn

        try:
            bot.send_message(chat_id=user_id, text=message_text, parse_mode='Markdown')
        except Exception as e:
            print(f"Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn k·∫øt qu·∫£ cho ng∆∞·ªùi d√πng {user_id}: {e}")

    user_bets.clear() # X√≥a c∆∞·ª£c c·ªßa phi√™n hi·ªán t·∫°i
    processed_users.clear()
    save_balance_to_file()
    save_session_history_to_file()
    time.sleep(3)

def game_timer():
    """Lu·ªìng ch·∫°y game T√†i X·ªâu t·ª± ƒë·ªông"""
    while True:
        start_game()
        time.sleep(5) # Kho·∫£ng th·ªùi gian ch·ªù gi·ªØa c√°c phi√™n

# =====================--------------(L·ªánh Admin)--------------=====================

@bot.message_handler(commands=['congtien'])
def congtien(message):
    """L·ªánh admin ƒë·ªÉ c·ªông ti·ªÅn cho ng∆∞·ªùi ch∆°i"""
    if message.from_user.id != ADMIN_ID:
        bot.reply_to(message, "‚ö†Ô∏è B·∫°n kh√¥ng c√≥ quy·ªÅn th·ª±c hi·ªán thao t√°c n√†y.")
        return

    try:
        command_parts = message.text.split()
        if len(command_parts) != 3:
            bot.reply_to(message, "‚ö†Ô∏è C√∫ ph√°p kh√¥ng h·ª£p l·ªá. Vui l√≤ng nh·∫≠p ƒë√∫ng: `/congtien [ID ng∆∞·ªùi ch∆°i] [s·ªë ti·ªÅn]`", parse_mode='Markdown')
            return

        target_user_id = int(command_parts[1])
        amount = int(command_parts[2])

        if amount <= 0:
            bot.reply_to(message, "‚ö†Ô∏è S·ªë ti·ªÅn c·ªông ph·∫£i l·ªõn h∆°n 0.")
            return

        load_balance_from_file() # T·∫£i s·ªë d∆∞ m·ªõi nh·∫•t

        if target_user_id not in user_balance:
            user_balance[target_user_id] = 0
        user_balance[target_user_id] += amount

        save_balance_to_file() # L∆∞u s·ªë d∆∞ ƒë√£ c·∫≠p nh·∫≠t

        bot.reply_to(message, f"‚úÖ ƒê√£ c·ªông th√†nh c√¥ng **{amount:,} VNƒê** v√†o t√†i kho·∫£n c·ªßa ID **{target_user_id}**.", parse_mode='Markdown')
        
        new_balance = user_balance[target_user_id]
        try:
            bot.send_message(
                target_user_id, 
                f"üéâ **B·∫°n v·ª´a ƒë∆∞·ª£c c·ªông {amount:,} VNƒê v√†o t√†i kho·∫£n.\nS·ªë d∆∞ hi·ªán t·∫°i c·ªßa b·∫°n: {new_balance:,} VNƒê**", 
                parse_mode='Markdown'
            )
        except Exception as e:
            print(f"Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn cho ng∆∞·ªùi d√πng {target_user_id}: {e}")
            bot.reply_to(message, f"‚ö†Ô∏è ƒê√£ c·ªông ti·ªÅn nh∆∞ng kh√¥ng th·ªÉ g·ª≠i th√¥ng b√°o cho ng∆∞·ªùi d√πng {target_user_id} (c√≥ th·ªÉ do ng∆∞·ªùi d√πng ch·∫∑n bot).")

    except ValueError:
        bot.reply_to(message, "‚ö†Ô∏è S·ªë ID ng∆∞·ªùi ch∆°i ho·∫∑c s·ªë ti·ªÅn kh√¥ng h·ª£p l·ªá. Vui l√≤ng nh·∫≠p s·ªë nguy√™n.")
    except Exception as e:
        bot.reply_to(message, f"‚ö†Ô∏è ƒê√£ x·∫£y ra l·ªói: {str(e)}")
        traceback.print_exc()

# =====================--------------(X·ª≠ l√Ω tin nh·∫Øn trong nh√≥m game)--------------=====================

@bot2.message_handler(func=lambda message: True)
def handle_message_in_gameroom(message):
    """X·ª≠ l√Ω tin nh·∫Øn trong nh√≥m game (ch·ªß y·∫øu l√† ƒë·∫∑t c∆∞·ª£c)"""
    global accepting_bets
    
    if accepting_bets:
        chat_id = message.chat.id
        
        # X·ª≠ l√Ω l·ªánh ƒë·∫∑t c∆∞·ª£c
        if message.text and len(message.text.split()) == 2:
            bet_type, bet_amount_str = message.text.split()

            if bet_type.upper() in ['T', 'X']:
                user_id = message.from_user.id
                
                # Load balance ƒë·ªÉ ƒë·∫£m b·∫£o s·ªë d∆∞ m·ªõi nh·∫•t
                load_balance_from_file()

                try:
                    if bet_amount_str.upper() == 'MAX':
                        max_bet_amount = min(user_balance.get(user_id, 0), 300000)
                        if max_bet_amount >= 3000:
                            bet_amount = max_bet_amount
                        else:
                            bot2.send_message(group_chat_id2, "‚ùå S·ªë d∆∞ c·ªßa b·∫°n kh√¥ng ƒë·ªß ƒë·ªÉ c∆∞·ª£c t·ªëi thi·ªÉu (3.000 VNƒê).", reply_to_message_id=message.message_id)
                            return
                    else:
                        bet_amount = int(bet_amount_str)

                    if 3000 <= bet_amount <= 300000:
                        # Ki·ªÉm tra xem ng∆∞·ªùi ch∆°i ƒë√£ c∆∞·ª£c m·∫∑t ƒë·ªëi di·ªán ch∆∞a
                        opposite_bet_type = 'T' if bet_type.upper() == 'X' else 'X'
                        if user_bets.get(user_id) and user_bets[user_id][opposite_bet_type] > 0:
                            bot2.send_message(group_chat_id2, "‚ùå Kh√¥ng ƒë∆∞·ª£c c∆∞·ª£c c·∫£ hai b√™n trong m·ªôt phi√™n.", reply_to_message_id=message.message_id)
                        else:
                            # X√°c nh·∫≠n c∆∞·ª£c (lu√¥n l√† kh√¥ng ·∫©n danh trong nh√≥m game)
                            confirm_bet(user_id, bet_type, bet_amount, message.message_id, is_anonymous=False)
                    else:
                        bot2.send_message(group_chat_id2, "‚ùå S·ªë ti·ªÅn c∆∞·ª£c ph·∫£i t·ª´ 3.000 ƒë·∫øn 300.000.", reply_to_message_id=message.message_id)
                except ValueError:
                    # N·∫øu s·ªë ti·ªÅn kh√¥ng ph·∫£i s·ªë h·ª£p l·ªá
                    bot2.send_message(group_chat_id2, "‚ùå S·ªë ti·ªÅn c∆∞·ª£c kh√¥ng h·ª£p l·ªá.", reply_to_message_id=message.message_id)
                except ApiException as e:
                    print(f"L·ªói API Telegram khi x·ª≠ l√Ω c∆∞·ª£c: {e}")
                except Exception as e:
                    print(f"L·ªói kh√¥ng x√°c ƒë·ªãnh khi x·ª≠ l√Ω c∆∞·ª£c: {e}")
        # X√≥a tin nh·∫Øn kh√¥ng ph·∫£i l·ªánh c∆∞·ª£c ho·∫∑c tin nh·∫Øn khi h·∫øt th·ªùi gian c∆∞·ª£c
        else:
            try:
                bot2.delete_message(message.chat.id, message.message_id)
                # if message.reply_to_message is not None: # C√≥ th·ªÉ x√≥a c·∫£ tin nh·∫Øn tr·∫£ l·ªùi n·∫øu mu·ªën
                #     bot2.delete_message(message.chat.id, message.reply_to_message.message_id)
            except Exception as e:
                print(f"L·ªói khi x√≥a tin nh·∫Øn trong nh√≥m game: {e}")
    else: # Khi kh√¥ng ch·∫•p nh·∫≠n c∆∞·ª£c
        try:
            bot2.delete_message(message.chat.id, message.message_id)
            # if message.reply_to_message is not None:
            #     bot2.delete_message(message.chat.id, message.reply_to_message.message_id)
        except Exception as e:
            print(f"L·ªói khi x√≥a tin nh·∫Øn khi h·∫øt th·ªùi gian c∆∞·ª£c: {e}")

        time.sleep(1)
        # Ch·ªâ g·ª≠i th√¥ng b√°o n√†y n·∫øu tin nh·∫Øn kh√¥ng ph·∫£i l√† l·ªánh c∆∞·ª£c h·ª£p l·ªá
        if message.text and not (message.text.split()[0].upper() in ['T', 'X'] and len(message.text.split()) == 2):
            bot2.send_message(message.chat.id, "‚ùå ƒê√£ Ng∆∞ng Nh·∫≠n C∆∞·ª£c. Vui L√≤ng Ch·ªù Phi√™n C∆∞·ª£c Sau.")


# =====================--------------(Ki·ªÉm tra file)--------------=====================
def check_file():
    """Ki·ªÉm tra s·ª± t·ªìn t·∫°i v√† n·ªôi dung c·ªßa file thanhtran309.txt"""
    try:
        with open("thanhtran309.txt", "r") as file:
            content = file.read()
            if "TRANTIENTHANH" not in content:
                print("L·ªói: 'thanhtran309.txt' thi·∫øu chu·ªói 'TRANTIENTHANH'. Bot s·∫Ω kh√¥ng ch·∫°y.")
                return False
    except FileNotFoundError:
        print("L·ªói: 'thanhtran309.txt' kh√¥ng t√¨m th·∫•y. Bot s·∫Ω kh√¥ng ch·∫°y.")
        return False
    return True   

# =====================--------------(Kh·ªüi ch·∫°y Bot)--------------=====================
def poll_bot(bot_instance):
    """H√†m ƒë·ªÉ ch·∫°y polling cho t·ª´ng bot trong m·ªôt lu·ªìng ri√™ng"""
    try:
        print(f"ƒêang kh·ªüi ƒë·ªông bot: {bot_instance.get_me().username}")
        bot_instance.polling(none_stop=True, interval=0, timeout=20)
    except Exception as e:
        print(f"L·ªói khi polling bot {bot_instance.get_me().username}: {e}")
        time.sleep(5) # ƒê·ª£i tr∆∞·ªõc khi th·ª≠ l·∫°i

if check_file():
    # Kh·ªüi t·∫°o v√† ch·∫°y c√°c lu·ªìng cho t·ª´ng bot
    thread_bot = threading.Thread(target=poll_bot, args=(bot,))
    thread_bot2 = threading.Thread(target=poll_bot, args=(bot2,))
    thread_bot3 = threading.Thread(target=poll_bot, args=(bot3,)) # C√≥ th·ªÉ b·ªè n·∫øu kh√¥ng d√πng bot3

    thread_bot.start()
    thread_bot2.start()
    thread_bot3.start() # B·∫Øt ƒë·∫ßu lu·ªìng bot3

    # Kh·ªüi ch·∫°y lu·ªìng game timer
    timer_thread = threading.Thread(target=game_timer)
    timer_thread.start()
    print("Bot ƒë√£ kh·ªüi ƒë·ªông v√† ƒëang ch·∫°y...")
else:
    print("Bot kh√¥ng th·ªÉ kh·ªüi ƒë·ªông do l·ªói ki·ªÉm tra file.")

